#!/bin/bash

################################################################################
## Parameters and helper functions

INITRAMFS_DIR=/run/initramfs
SYSTEM_SLEEP_PATH=/usr/lib/systemd/system-sleep
BIND_PATHS=(/sys /proc /dev /run)
CRYPTNAME="$(sed -n 's/.*cryptdevice=[^: ]*:\([^: ]*\).*$/\1/p' /proc/cmdline)"

panic() { while :; do echo o > /proc/sysrq-trigger; done }

# Shutdown on script errors
set -e -E -u
trap panic ERR

# run_dir DIR ARGS...
# Run all executable scripts in directory DIR with arguments ARGS
run_dir() {
    local dir=$1
    shift
    find "${dir}" -type f -executable -exec "{}" "$@" ";"
}

mount_initramfs() {
    local p
    for p in "${BIND_PATHS[@]}"; do
        mount -o bind "${p}" "${INITRAMFS_DIR}${p}"
    done
}

umount_initramfs() {
    local p
    for p in "${BIND_PATHS[@]}"; do
        ! mountpoint -q "${INITRAMFS_DIR}${p}" || umount "${INITRAMFS_DIR}${p}"
    done
}

is_suspended() {
    [[ "$(cat "$1/suspended")" -eq 1 ]]
}

needs_remount() {
    local fs="$1" mtopts="$2"

    if [[ "$fs" != ext4 ]]; then
        echo 0
    elif ! [[ "$mtopts" == *nobarrier* || "$mtopts" == *barrier=0* ]]; then
        echo 1
    else
        echo 0
    fi
}

ext4_cryptdevice_mount_options() {
    local mt="$(grep "^/dev/mapper/${1} " /proc/mounts | cut -d ' ' -f 3,4)"
    if [[ "${mt:0:5}" == "ext4 " ]]; then
        echo "${mt:5}"
    fi
}

# Journalled ext4 filesystems in kernel versions 3.11+ will block suspend if
# mounted with `barrier=1`, which is the default. We can remount affected
# devices with `barrier=0` to work around this.
remount_blocking_devices() {
    MOUNT_OPTS="$(ext4_cryptdevice_mount_options "$CRYPTNAME")"
    if [[ "$MOUNT_OPTS" ]] && ! [[ "$MOUNT_OPTS" == *nobarrier* || "$MOUNT_OPTS" == *barrier=0* ]]; then
        REMOUNT=1
        mount -o remount,"$MOUNT_OPTS",barrier=0 /
    fi
}

# Prevent journald from attempting to write to the suspended device
journald_service() {
    systemctl "$1" systemd-journald-dev-log.socket
    systemctl "$1" systemd-journald.socket
    systemctl "$1" systemd-journald.service
}

################################################################################
## Main script

[[ -x "${INITRAMFS_DIR}/suspend" ]] || panic

# Prepare chroot
trap umount_initramfs EXIT
mount_initramfs

# Run pre-suspend scripts
run_dir "${SYSTEM_SLEEP_PATH}" pre suspend

# Stop services that may block suspend
journald_service stop

# Synchronize filesystems before luksSuspend
sync

# Disable write barriers to avoid IO hangs
remount_blocking_devices barrier=0

# Hand over execution to script inside initramfs
{
    pushd . >/dev/null
    cd "${INITRAMFS_DIR}"
    chroot . /suspend "$CRYPTNAME"
    popd >/dev/null
}

# Restore original mount options where necessary
remount_blocking_devices barrier=1

# Restart stopped services
journald_service start

# Run post-suspend scripts
run_dir "${SYSTEM_SLEEP_PATH}" post suspend
